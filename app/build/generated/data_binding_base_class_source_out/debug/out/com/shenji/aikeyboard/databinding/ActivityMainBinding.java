// Generated by view binder compiler. Do not edit!
package com.shenji.aikeyboard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.shenji.aikeyboard.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnDevTools;

  @NonNull
  public final Button btnDictManager;

  @NonNull
  public final Button btnImeSettings;

  @NonNull
  public final Button btnInputTest;

  @NonNull
  public final Button btnLogs;

  @NonNull
  public final Button btnMobileDebug;

  @NonNull
  public final Button btnSyllableTest;

  @NonNull
  public final LinearLayout mainButtonContainer;

  @NonNull
  public final ConstraintLayout mainContainer;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvHelpText;

  @NonNull
  public final TextView tvTitle;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnDevTools,
      @NonNull Button btnDictManager, @NonNull Button btnImeSettings, @NonNull Button btnInputTest,
      @NonNull Button btnLogs, @NonNull Button btnMobileDebug, @NonNull Button btnSyllableTest,
      @NonNull LinearLayout mainButtonContainer, @NonNull ConstraintLayout mainContainer,
      @NonNull Toolbar toolbar, @NonNull TextView tvHelpText, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnDevTools = btnDevTools;
    this.btnDictManager = btnDictManager;
    this.btnImeSettings = btnImeSettings;
    this.btnInputTest = btnInputTest;
    this.btnLogs = btnLogs;
    this.btnMobileDebug = btnMobileDebug;
    this.btnSyllableTest = btnSyllableTest;
    this.mainButtonContainer = mainButtonContainer;
    this.mainContainer = mainContainer;
    this.toolbar = toolbar;
    this.tvHelpText = tvHelpText;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDevTools;
      Button btnDevTools = ViewBindings.findChildViewById(rootView, id);
      if (btnDevTools == null) {
        break missingId;
      }

      id = R.id.btnDictManager;
      Button btnDictManager = ViewBindings.findChildViewById(rootView, id);
      if (btnDictManager == null) {
        break missingId;
      }

      id = R.id.btn_ime_settings;
      Button btnImeSettings = ViewBindings.findChildViewById(rootView, id);
      if (btnImeSettings == null) {
        break missingId;
      }

      id = R.id.btnInputTest;
      Button btnInputTest = ViewBindings.findChildViewById(rootView, id);
      if (btnInputTest == null) {
        break missingId;
      }

      id = R.id.btnLogs;
      Button btnLogs = ViewBindings.findChildViewById(rootView, id);
      if (btnLogs == null) {
        break missingId;
      }

      id = R.id.btnMobileDebug;
      Button btnMobileDebug = ViewBindings.findChildViewById(rootView, id);
      if (btnMobileDebug == null) {
        break missingId;
      }

      id = R.id.btnSyllableTest;
      Button btnSyllableTest = ViewBindings.findChildViewById(rootView, id);
      if (btnSyllableTest == null) {
        break missingId;
      }

      id = R.id.mainButtonContainer;
      LinearLayout mainButtonContainer = ViewBindings.findChildViewById(rootView, id);
      if (mainButtonContainer == null) {
        break missingId;
      }

      ConstraintLayout mainContainer = (ConstraintLayout) rootView;

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvHelpText;
      TextView tvHelpText = ViewBindings.findChildViewById(rootView, id);
      if (tvHelpText == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, btnDevTools, btnDictManager,
          btnImeSettings, btnInputTest, btnLogs, btnMobileDebug, btnSyllableTest,
          mainButtonContainer, mainContainer, toolbar, tvHelpText, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

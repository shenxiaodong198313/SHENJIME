// Generated by view binder compiler. Do not edit!
package com.shenji.aikeyboard.databinding;

import android.inputmethodservice.KeyboardView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.shenji.aikeyboard.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class KeyboardViewBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout candidatesContainer;

  @NonNull
  public final LinearLayout candidatesLayout;

  @NonNull
  public final KeyboardView keyboardView;

  private KeyboardViewBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout candidatesContainer, @NonNull LinearLayout candidatesLayout,
      @NonNull KeyboardView keyboardView) {
    this.rootView = rootView;
    this.candidatesContainer = candidatesContainer;
    this.candidatesLayout = candidatesLayout;
    this.keyboardView = keyboardView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static KeyboardViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static KeyboardViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.keyboard_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static KeyboardViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.candidates_container;
      LinearLayout candidatesContainer = ViewBindings.findChildViewById(rootView, id);
      if (candidatesContainer == null) {
        break missingId;
      }

      id = R.id.candidates_layout;
      LinearLayout candidatesLayout = ViewBindings.findChildViewById(rootView, id);
      if (candidatesLayout == null) {
        break missingId;
      }

      id = R.id.keyboard_view;
      KeyboardView keyboardView = ViewBindings.findChildViewById(rootView, id);
      if (keyboardView == null) {
        break missingId;
      }

      return new KeyboardViewBinding((RelativeLayout) rootView, candidatesContainer,
          candidatesLayout, keyboardView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
